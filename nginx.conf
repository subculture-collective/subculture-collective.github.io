# Nginx Configuration for SubCult.TV VPS Deployment
# This configuration provides a production-ready setup for hosting the SPA

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;

# Upstream for future API integration
# upstream api {
#     server localhost:3000;
#     keepalive 32;
# }

# HTTP server - redirect all traffic to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name subcult.example.com www.subcult.example.com;

    # Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name subcult.example.com www.subcult.example.com;

    # Document root
    root /var/www/subcult/dist;
    index index.html;

    # Charset
    charset utf-8;

    # SSL Configuration
    # Let's Encrypt certificates (generated by certbot)
    ssl_certificate /etc/letsencrypt/live/subcult.example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/subcult.example.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/subcult.example.com/chain.pem;

    # SSL protocols and ciphers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;

    # SSL session cache
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # Content Security Policy
    # Adjust based on your actual resource requirements
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com data:; img-src 'self' data: https:; connect-src 'self'; frame-ancestors 'self';" always;

    # Logging
    access_log /var/log/nginx/subcult.access.log;
    error_log /var/log/nginx/subcult.error.log warn;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/rss+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;
    gzip_disable "msie6";

    # Brotli compression (requires ngx_brotli module)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types
    #     text/plain
    #     text/css
    #     text/xml
    #     text/javascript
    #     application/json
    #     application/javascript
    #     application/xml+rss
    #     application/rss+xml
    #     font/truetype
    #     font/opentype
    #     application/vnd.ms-fontobject
    #     image/svg+xml;

    # Rate limiting
    limit_req zone=general burst=20 nodelay;

    # Main location - SPA routing
    location / {
        # Try to serve file directly, fall back to index.html for SPA routing
        try_files $uri $uri/ /index.html;

        # Cache control for HTML files (no cache)
        location ~* \.html$ {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
    }

    # Static assets with cache and pre-compressed file serving
    location /assets/ {
        # Try to serve pre-compressed files
        gzip_static on;
        brotli_static on;  # Requires ngx_brotli module

        # Cache static assets for 1 year
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Disable access log for static assets
        access_log off;
        
        # CORS headers if needed
        # add_header Access-Control-Allow-Origin "*" always;
    }

    # Images
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp|avif)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Fonts
    location ~* \.(woff|woff2|ttf|otf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        
        # CORS for fonts
        add_header Access-Control-Allow-Origin "*" always;
    }

    # Favicon
    location = /favicon.ico {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        log_not_found off;
    }

    location = /vite.svg {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Robots and sitemap
    location = /robots.txt {
        expires 1d;
        add_header Cache-Control "public";
        access_log off;
        log_not_found off;
    }

    location = /sitemap.xml {
        expires 1d;
        add_header Cache-Control "public";
        access_log off;
    }

    # 404 handling for SPA
    location = /404.html {
        internal;
    }

    error_page 404 /404.html;
    error_page 500 502 503 504 /index.html;

    # Future API endpoint (uncomment when API is ready)
    # location /api/ {
    #     limit_req zone=api burst=50 nodelay;
    #     
    #     proxy_pass http://api;
    #     proxy_http_version 1.1;
    #     
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection 'upgrade';
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     
    #     proxy_cache_bypass $http_upgrade;
    #     proxy_redirect off;
    #     proxy_buffering off;
    # }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Deny access to backup and source files
    location ~* \.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}
