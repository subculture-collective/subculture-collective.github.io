name: Performance Testing
permissions:
  contents: read

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

jobs:
  lighthouse-performance:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Analyze bundle size
        run: |
          echo "## Bundle Size Analysis" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### JavaScript Bundles" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          find dist/assets -name "*.js" -type f -exec du -h {} + | sort -h >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Total Size" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          du -sh dist/ >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Check bundle budget
        run: |
          # Check if main vendor bundle exceeds budget (300KB)
          VENDOR_SIZE=$(find dist/assets -name "vendor-react*.js" -exec du -k {} + | awk '{print $1}')
          if [ "$VENDOR_SIZE" -gt 300 ]; then
            echo "::warning::Vendor bundle size ($VENDOR_SIZE KB) exceeds budget (300 KB)"
          fi

          # Check if any page chunk exceeds budget (50KB)
          for file in dist/assets/*.js; do
            if [[ ! "$file" =~ vendor ]]; then
              SIZE=$(du -k "$file" | awk '{print $1}')
              if [ "$SIZE" -gt 50 ]; then
                echo "::warning::Page chunk $(basename $file) size ($SIZE KB) exceeds budget (50 KB)"
              fi
            fi
          done

      - name: Serve and audit with Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.13.x
          npm install -g serve

          # Start the server in the background
          serve -s dist -l 8080 &
          SERVER_PID=$!

          # Wait for server to be ready
          sleep 5

          # Run Lighthouse CI
          lhci autorun --config=lighthouserc.json || true

          # Kill the server
          kill $SERVER_PID

      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-performance-results
          path: .lighthouseci/
          retention-days: 30

      - name: Upload bundle stats
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: bundle-stats
          path: dist/stats.html
          retention-days: 30

  performance-summary:
    name: Performance Summary
    runs-on: ubuntu-latest
    needs: [lighthouse-performance]
    if: always()
    steps:
      - name: Summary
        run: |
          echo "## Performance Testing Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Lighthouse performance audit completed" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Bundle size analysis completed" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Bundle budget checks completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ“Š See job artifacts for detailed results" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ“ˆ View bundle visualization in stats.html artifact" >> $GITHUB_STEP_SUMMARY
